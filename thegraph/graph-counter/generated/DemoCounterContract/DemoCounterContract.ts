// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CountChanged extends ethereum.Event {
  get params(): CountChanged__Params {
    return new CountChanged__Params(this);
  }
}

export class CountChanged__Params {
  _event: CountChanged;

  constructor(event: CountChanged) {
    this._event = event;
  }

  get newCount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class DemoCounterContract extends ethereum.SmartContract {
  static bind(address: Address): DemoCounterContract {
    return new DemoCounterContract("DemoCounterContract", address);
  }

  getCount(): BigInt {
    let result = super.call("getCount", "getCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getCount", "getCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class DecrementCall extends ethereum.Call {
  get inputs(): DecrementCall__Inputs {
    return new DecrementCall__Inputs(this);
  }

  get outputs(): DecrementCall__Outputs {
    return new DecrementCall__Outputs(this);
  }
}

export class DecrementCall__Inputs {
  _call: DecrementCall;

  constructor(call: DecrementCall) {
    this._call = call;
  }
}

export class DecrementCall__Outputs {
  _call: DecrementCall;

  constructor(call: DecrementCall) {
    this._call = call;
  }
}

export class IncrementCall extends ethereum.Call {
  get inputs(): IncrementCall__Inputs {
    return new IncrementCall__Inputs(this);
  }

  get outputs(): IncrementCall__Outputs {
    return new IncrementCall__Outputs(this);
  }
}

export class IncrementCall__Inputs {
  _call: IncrementCall;

  constructor(call: IncrementCall) {
    this._call = call;
  }
}

export class IncrementCall__Outputs {
  _call: IncrementCall;

  constructor(call: IncrementCall) {
    this._call = call;
  }
}
